name: Validate Templates

on:
  push:
    branches: [ main, spec ]
  pull_request:
    branches: [ main ]
    paths:
      - 'templates/**'
      - 'scripts/validate_templates.py'
      - 'scripts/check_third_party_nodes.py'
      - 'scripts/validate_thumbnails.py'
      - '.github/workflows/validate-templates.yml'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jsonschema
    
    - name: Run validation script
      run: python scripts/validate_templates.py
    
    - name: Check JSON syntax
      run: |
        echo "Checking JSON syntax..."
        for file in templates/*.json; do
          if ! python -m json.tool "$file" > /dev/null 2>&1; then
            echo "❌ Invalid JSON syntax in $file"
            exit 1
          fi
        done
        echo "✅ All JSON files have valid syntax"
    
    - name: Check file sizes
      run: |
        echo "Checking file sizes..."
        LARGE_FILES=0
        for file in templates/*; do
          if [ -f "$file" ]; then
            SIZE=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file" 2>/dev/null)
            SIZE_MB=$((SIZE / 1048576))
            if [ "$SIZE_MB" -gt 5 ]; then
              echo "⚠️  Warning: $file is larger than 5MB (${SIZE_MB}MB)"
              LARGE_FILES=$((LARGE_FILES + 1))
            fi
          fi
        done
        if [ "$LARGE_FILES" -gt 0 ]; then
          echo "Found $LARGE_FILES large files. Consider compressing thumbnails."
        fi
    
    - name: Check for third-party nodes
      id: third_party_check
      run: |
        echo "Checking for third-party nodes..."
        python3 scripts/check_third_party_nodes.py > third_party_report.txt 2>&1 || echo "third_party_found=true" >> $GITHUB_OUTPUT
        cat third_party_report.txt
        
        # Check if third-party nodes are found
        if grep -q "Third-party nodes found" third_party_report.txt; then
          echo "third_party_found=true" >> $GITHUB_OUTPUT
          echo "::error::Third-party nodes found. Please only use official nodes with cnr_id: 'comfy-core'"
        else
          echo "third_party_found=false" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true
    
    - name: Comment on PR about third-party nodes
      if: steps.third_party_check.outputs.third_party_found == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read report content
          let report = '';
          try {
            report = fs.readFileSync('third_party_report.txt', 'utf8');
          } catch (error) {
            report = 'Unable to read third-party node check report';
          }
          
          const comment = `## ❌ Third-Party Nodes Found
          
          Your template uses third-party nodes, which is not allowed for official templates. 
          
          **Why this matters:** Official templates should work out-of-the-box without requiring users to install additional custom nodes or extensions. We want users to be able to open and use templates directly with a standard ComfyUI installation.
          
          ### Check Report:
          \`\`\`
          ${report}
          \`\`\`
          
          ### How to Fix:
          1. Check the \`properties.cnr_id\` field in all nodes in your template files
          2. Ensure all \`cnr_id\` values are \`"comfy-core"\` (official nodes only)
          3. Remove or replace any nodes using other \`cnr_id\` values with equivalent official nodes
          
          **Note**: Only templates using official ComfyUI nodes (\`cnr_id: "comfy-core"\`) can be merged to ensure plug-and-play functionality.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Validate thumbnails
      id: thumbnail_check
      run: |
        echo "Validating template thumbnails..."
        python3 scripts/validate_thumbnails.py > thumbnail_report.txt 2>&1 || echo "thumbnail_issues=true" >> $GITHUB_OUTPUT
        cat thumbnail_report.txt
        
        # Check if thumbnail validation failed
        if grep -q "Thumbnail validation failed" thumbnail_report.txt; then
          echo "thumbnail_issues=true" >> $GITHUB_OUTPUT
          echo "::error::Thumbnail validation failed. Please check thumbnail files and configurations."
        else
          echo "thumbnail_issues=false" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true
    
    - name: Comment on PR about thumbnail issues
      if: steps.thumbnail_check.outputs.thumbnail_issues == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read thumbnail validation report
          let report = '';
          try {
            report = fs.readFileSync('thumbnail_report.txt', 'utf8');
          } catch (error) {
            report = 'Unable to read thumbnail validation report';
          }
          
          const comment = `## ❌ Thumbnail Validation Issues Found
          
          Your template has thumbnail configuration issues that need to be resolved.
          
          **Why this matters:** Templates need proper thumbnails to provide users with visual previews. Templates with special thumbnail variants like "compareSlider" or "hoverDissolve" require specific thumbnail files to work correctly.
          
          ### Validation Report:
          \`\`\`
          ${report}
          \`\`\`
          
          ### How to Fix:
          1. **Missing thumbnails**: Ensure each template has at least one thumbnail file (e.g., \`template-1.webp\`)
          2. **Incomplete dual thumbnails**: Templates with \`thumbnailVariant: "compareSlider"\` or \`"hoverDissolve"\` need both \`-1\` and \`-2\` thumbnail files
          3. **Check file naming**: Thumbnail files should be named \`{template_name}-{number}.{extension}\`
          4. **Verify file format**: Use the correct file extension (\`.webp\`, \`.mp3\`, etc.) as specified in the template's \`mediaSubtype\`
          
          **Note**: All templates must have proper thumbnails configured to ensure the best user experience when browsing templates.`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });