name: Generate Upload JSON

on:
  push:
    branches:
      - main
    paths:
      - 'input/**'
      - 'templates/index.json'
      - 'scripts/check_input_assets.py'
  pull_request:
    paths:
      - 'input/**'
      - 'templates/index.json'
      - 'scripts/check_input_assets.py'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-json:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Validate input assets and generate upload JSON
        run: |
          python scripts/check_input_assets.py --generate-upload-json
      
      - name: Check if JSON was generated
        id: check_json
        run: |
          if [ -f "workflow_template_input_files.json" ]; then
            echo "json_exists=true" >> $GITHUB_OUTPUT
            echo "✅ workflow_template_input_files.json was generated"
            
            # Show file stats
            FILE_SIZE=$(stat -f%z "workflow_template_input_files.json" 2>/dev/null || stat -c%s "workflow_template_input_files.json" 2>/dev/null)
            ASSET_COUNT=$(jq '.assets | length' workflow_template_input_files.json)
            echo "📊 File size: ${FILE_SIZE} bytes"
            echo "📊 Asset count: ${ASSET_COUNT}"
            echo "asset_count=${ASSET_COUNT}" >> $GITHUB_OUTPUT
          else
            echo "json_exists=false" >> $GITHUB_OUTPUT
            echo "⚠️ workflow_template_input_files.json was not generated"
          fi
      
      - name: Upload artifact
        if: steps.check_json.outputs.json_exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: workflow-template-input-files
          path: workflow_template_input_files.json
          retention-days: 30
      
      - name: Commit and push if changed
        if: steps.check_json.outputs.json_exists == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          if [ -n "$(git status --porcelain workflow_template_input_files.json)" ]; then
            git add workflow_template_input_files.json
            
            # Commit message
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              COMMIT_MSG="chore: update workflow_template_input_files.json (PR #${{ github.event.pull_request.number }})"
            else
              COMMIT_MSG="chore: update workflow_template_input_files.json [skip ci]"
            fi
            
            git commit -m "$COMMIT_MSG"
            
            # Push to the appropriate branch
            if [ "${{ github.event_name }}" = "pull_request" ]; then
              # For PRs, push to the head branch
              git push origin HEAD:${{ github.head_ref }}
            else
              # For main branch
              git push
            fi
            
            echo "✅ Changes committed and pushed"
          else
            echo "ℹ️ No changes to commit"
          fi
      
      - name: Comment on PR with summary
        if: github.event_name == 'pull_request' && steps.check_json.outputs.json_exists == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const data = JSON.parse(fs.readFileSync('workflow_template_input_files.json', 'utf8'));
            
            const assetCount = data.assets.length;
            const sampleAssets = data.assets.slice(0, 5);
            
            let comment = `## 📦 Upload JSON Generated\n\n`;
            comment += `**Total Assets:** ${assetCount}\n\n`;
            comment += `### Sample Entries (first 5):\n\n`;
            
            for (const asset of sampleAssets) {
              comment += `#### ${asset.display_name}\n`;
              comment += `- **File Path:** \`${asset.file_path}\`\n`;
              comment += `- **URL:** \`${asset.url.split('/').pop()}\`\n`;
              comment += `- **Tags:** ${asset.tags.map(t => `\`${t}\``).join(', ')}\n`;
              comment += `- **MIME Type:** \`${asset.mime_type}\`\n\n`;
            }
            
            if (assetCount > 5) {
              comment += `\n_... and ${assetCount - 5} more assets_\n`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

