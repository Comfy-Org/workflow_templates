name: Validate Multi-Language Templates

on:
  push:
    branches: [ main, spec ]
    paths:
      - 'templates/index.json'
      - 'templates/index.ja.json'
      - 'templates/index.zh.json'
      - 'templates/index.es.json' 
      - 'templates/index.ko.json'
      - 'templates/index.zh-TW.json'
      - 'templates/index.fr.json'
      - 'templates/index.ru.json'
      - 'scripts/validate_multilang_index.py'
      - '.github/workflows/validate-multilang.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'templates/index.json'
      - 'templates/index.ja.json'
      - 'templates/index.zh.json'
      - 'templates/index.es.json'
      - 'templates/index.ko.json'
      - 'templates/index.zh-TW.json'
      - 'templates/index.fr.json'
      - 'templates/index.ru.json'
      - 'scripts/validate_multilang_index.py'
      - '.github/workflows/validate-multilang.yml'

permissions:
  contents: write  # Allow writing to repository (for auto-commits on PRs)
  pull-requests: write  # Allow commenting on PRs

jobs:
  validate-multilang:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Configure Git for auto-commit
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        # For PR from forks, we need to configure differently
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # Check if this is a fork PR
          if [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            echo "fork_pr=true" >> $GITHUB_ENV
          else
            echo "fork_pr=false" >> $GITHUB_ENV
            # For same-repo PRs, checkout the PR branch
            git fetch origin ${{ github.head_ref }}
            git checkout ${{ github.head_ref }}
          fi
        else
          echo "fork_pr=false" >> $GITHUB_ENV
        fi
    
    - name: Validate and auto-fix multi-language index files
      id: multilang_check
      run: |
        echo "Validating multi-language index consistency..."
        
        # Only enable auto-fix for PRs (not push events to main branches)
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          # Skip auto-fix for fork PRs since we can't push to them
          if [ "$fork_pr" = "true" ]; then
            echo "üîç This is a fork PR - auto-fix disabled, validation only..."
            python3 scripts/validate_multilang_index.py > multilang_report.txt 2>&1 || echo "multilang_issues=true" >> $GITHUB_OUTPUT
          else
            echo "üîß Auto-fix enabled for same-repo PR..."
            python3 scripts/validate_multilang_index.py --auto-fix > multilang_report.txt 2>&1 || echo "multilang_issues=true" >> $GITHUB_OUTPUT
          fi
        else
          echo "üîç Push event - validation only, no auto-fix..."
          python3 scripts/validate_multilang_index.py > multilang_report.txt 2>&1 || echo "multilang_issues=true" >> $GITHUB_OUTPUT
        fi
        
        cat multilang_report.txt
        
        # Check if multi-language validation failed
        if grep -q "Multi-language validation failed" multilang_report.txt; then
          echo "multilang_issues=true" >> $GITHUB_OUTPUT
          echo "::error::Multi-language index validation failed. Some issues remain after auto-fix."
        else
          echo "multilang_issues=false" >> $GITHUB_OUTPUT
        fi
        
        # Check if auto-fixes were applied
        if grep -q "Auto-Fixed Missing Templates" multilang_report.txt; then
          echo "auto_fixes_applied=true" >> $GITHUB_OUTPUT
        else
          echo "auto_fixes_applied=false" >> $GITHUB_OUTPUT
        fi
        
        # Check if we're in a fork PR scenario
        echo "fork_pr=$fork_pr" >> $GITHUB_OUTPUT
      continue-on-error: true
    
    - name: Comment on PR about multi-language issues
      if: steps.multilang_check.outputs.multilang_issues == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read multi-language validation report
          let report = '';
          try {
            report = fs.readFileSync('multilang_report.txt', 'utf8');
          } catch (error) {
            report = 'Unable to read multi-language validation report';
          }
          
          // Check if auto-fixes were applied
          const autoFixesApplied = context.payload.pull_request && 
                                 context.payload.check_suite && 
                                 context.payload.check_suite.conclusion !== 'failure';
          
          let comment = `## Multi-language Template Index Validation Result
          
          **Why this matters:** All language versions must have the same templates and consistent structural properties to ensure users get the same functionality regardless of language. Only the title, description, and other display text should differ between languages.
          
          ### Validation Report:
          \`\`\`
          ${report}
          \`\`\``;
          
          // Add different sections based on whether issues remain
          if (report.includes('Auto-Fixed Missing Templates')) {
            comment += `
          
          ## ‚úÖ Auto-fix Applied
          
          Missing templates have been automatically copied from \`index.json\` to the affected language files and committed to this PR. These templates contain English content and **require manual translation**.
          
          ### Next Steps:
          1. **Review the auto-generated commits in this PR**
          2. **Translate the English content in the affected language files**:
             - Update the \`title\` and \`description\` fields to the target language
             - Keep all other properties (\`mediaType\`, \`thumbnailVariant\`, \`tags\`, etc.) exactly the same
          3. **Do not modify** structural properties - only translate display text.`;
          
            if (report.includes('Multi-language validation failed')) {
              comment += `
          
          ## ‚ùå Additional Issues Found
          
          Some issues could not be auto-fixed and require manual intervention:`;
            }
          } else {
            comment += `
          
          ## ‚ùå Multi-language Index Inconsistencies Detected
          
          Your changes have caused inconsistencies that require manual resolution:`;
          }
          
          if (report.includes('Multi-language validation failed')) {
            comment += `
          
          ### Manual Fixes Required:
          1. **Extra templates**: Remove extra templates or add them to the English reference file if they should exist
          2. **Structural mismatches**: Ensure \`mediaType\`, \`thumbnailVariant\`, \`tags\`, \`models\`, etc. are exactly the same in all languages
          3. **Category mismatches**: Ensure all language files have the same number and structure of categories
          
          ### Files to Update:
          - Check all \`index.*.json\` files in the \`templates/\` directory
          - Use \`index.json\` (English) as the reference for structure and template list
          - Only translate the \`title\` and \`description\` fields - keep all other properties exactly the same
          
          **Note**: All language versions must be perfectly synchronized to ensure a consistent user experience across languages.`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Comment on PR about successful auto-fix
      if: steps.multilang_check.outputs.auto_fixes_applied == 'true' && steps.multilang_check.outputs.multilang_issues == 'false' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read multi-language validation report
          let report = '';
          try {
            report = fs.readFileSync('multilang_report.txt', 'utf8');
          } catch (error) {
            report = 'Unable to read multi-language validation report';
          }
          
          const comment = `## ‚úÖ Multi-language Template Auto-fix Successful
          
          Missing templates have been automatically added to the language files and successfully committed.
          
          ### Validation Report:
          \`\`\`
          ${report}
          \`\`\`
          
          ### üìù Translation Reminder:
          
          The automatically added templates contain English content. Please translate the following fields before merging:
          - \`title\` - Template title
          - \`description\` - Template description
          - \`tutorialUrl\` - Tutorial link (if any)
          
          **Do not modify** other structural properties (\`mediaType\`, \`thumbnailVariant\`, \`tags\`, \`models\`, etc.), which must remain consistent across all languages.
          
          ü§ñ *This fix was generated by an automated workflow*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Comment on fork PR about manual fixes needed
      if: steps.multilang_check.outputs.fork_pr == 'true' && steps.multilang_check.outputs.multilang_issues == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          
          // Read multi-language validation report
          let report = '';
          try {
            report = fs.readFileSync('multilang_report.txt', 'utf8');
          } catch (error) {
            report = 'Unable to read multi-language validation report';
          }
          
          const comment = `## üîß Fork PR: Manual Multi-Language Index Fixes Required
          
          **Notice:** Since this is a PR from a fork repository, auto-fix functionality is disabled. You need to manually fix the detected multi-language index issues.
          
          ### Validation Report:
          \`\`\`
          ${report}
          \`\`\`
          
          ### Manual Fix Steps:
          
          1. **Run the fix script in your fork repository**:
             \`\`\`bash
             python3 scripts/validate_multilang_index.py --auto-fix
             \`\`\`
          
          2. **Translate auto-added English content**:
             - Update \`title\` and \`description\` fields to target language
             - Keep other properties (\`mediaType\`, \`thumbnailVariant\`, \`tags\`, etc.) exactly the same
          
          3. **Commit changes and push to your PR**:
             \`\`\`bash
             git add templates/index*.json
             git commit -m "Fix multi-language index inconsistencies"
             git push
             \`\`\`
          
          ### Why Manual Fix is Required?
          
          For security reasons, GitHub Actions cannot directly push commits to fork repository PRs. Auto-fix functionality only works for same-repository PRs.
          
          ü§ñ *This message was generated by automated workflow*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
    
    - name: Fail job if validation issues remain
      if: steps.multilang_check.outputs.multilang_issues == 'true'
      run: |
        echo "‚ùå Multi-language validation failed with unresolved issues"
        exit 1
