name: Check Input Assets

on:
  pull_request:
    paths:
      - 'templates/**/*.json'
      - 'input/**'
      - 'scripts/check_input_assets.py'
      - '.github/workflows/check_input_assets.yml'

permissions:
  pull-requests: write
  contents: read

jobs:
  validate-input-assets:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Run input assets validation
        id: validation
        run: |
          python scripts/check_input_assets.py
        continue-on-error: true
      
      - name: Read validation report
        id: read_report
        run: |
          if [ -f asset_validation_report.md ]; then
            echo "report_exists=true" >> $GITHUB_OUTPUT
            # Read the report content and escape it properly for GitHub Actions
            REPORT_CONTENT=$(cat asset_validation_report.md)
            echo "report_content<<EOF" >> $GITHUB_OUTPUT
            echo "$REPORT_CONTENT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "report_exists=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Comment on PR with validation results
        if: steps.read_report.outputs.report_exists == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const report = `${{ steps.read_report.outputs.report_content }}`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Input Assets Validation Report')
            );
            
            const commentBody = `${report}\n\n---\n*This comment is automatically generated by the Input Assets Validation workflow.*`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
              console.log('Updated existing comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
              console.log('Created new comment');
            }
      
      - name: Upload validation report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: asset-validation-report
          path: asset_validation_report.md
          if-no-files-found: warn
      
      - name: Check validation result
        run: |
          python scripts/check_input_assets.py

